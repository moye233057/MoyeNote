min\max    计算最小值和最大值
argmin\argmax    计算能够获取到最大值或最小值的索引位置
idxmin\idxmax    计算能够获取到最小值和最大值的索引值
quantile    计算样本的分位数（0-1）
sum    值得总和
mean    值得平均值
median    值的算术中位数（50%分位数）
mad    根据平均值计算平均绝对离差
var    样本值得方差
std    样本值得标准差

处理缺失数据
Dropna()丢弃缺失数据
dropna_col = fp.dropna(axis=0,subset=["Age","Sex"]) #将"Age","Sex"中有缺失值的数据丢弃


Fillna()填充缺失数据

1.用pandas打开.csv或者.xlsx文件
.csv文件是以","作为分隔符的文件，可以用Excel打开（2003或者2007）

DataFrame是Python中Pandas库中的一种数据结构，它类似excel，是一种二维表。
使用numpy函数创建DataFrame
df1 = pd.DataFrame(np.random.randn(3, 3), index=['a','b','c'], columns=list('ABC'))
注意：index和columns创建行列名称有两种方式，如上，list方法中字符串长度与DataFrame单维长度要相同
二位数组创建
字典：dic1 = {
    'name': [
        '张三', '李四', '王二麻子', '小淘气'], 'age': [
            37, 30, 50, 16], 'gender': [
                '男', '男', '男', '女']}

使用head可以查看前几行的数据，默认的是前5行，不过也可以自己设置。
使用tail可以查看后几行的数据，默认也是5行，参数可以自己设置。
使用index查看行名，columns查看列名
使用values可以查看DataFrame里的数据值，，返回的是一个数组。

from pandas import *
fp = DataFrame(read_csv('food_info.csv')) #打开.csv文件
print(fp.head(1)) #打印数据的头1行，fp.tail(3) #打印数据的最后3行
print(fp.shape)

打印行信息
from pandas import *
fp = DataFrame(read_csv('food_info.csv'))
print(fp.loc[0]) #打印第0行
print(fp.loc[0:3]) #打印0-3行,这和python不一样，python中[0:3]左包右不包
print(fp.loc[[2,5,6,8,9]]) #打印2,5,6,8,9行

3.打印列信息
from pandas import *
fp = DataFrame(read_csv('food_info.csv'))
print(fp.columns.tolist()) #打印列名，并转化为列表形式
print(fp["NDB_No"]) #打印列名为NDB_No这一列
print(fp[["NDB_No","Water_(g)","Sugar_Tot_(g)"]])#打印列名为NDB_No,Water_(g),Sugar_Tot_(g)这3列


排序
from pandas import *
fp = DataFrame(read_csv('food_info.csv'))
fp.sort_values("Water_(g)",inplace=True,ascending=False) #inplace表示直接在原数据上排序,降序
print(fp["Water_(g)"]) #结果是降序排序